// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/10/2025 11:08:43"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          LAB6_Part2
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module LAB6_Part2_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CIN;
reg Mem_CLK;
reg Reset_L;
// wires                                               
wire [6:0] AA;
wire [14:0] Address;
wire [6:0] BB;
wire [6:0] CC;
wire CLK;
wire COUT;
wire [1:0] D;
wire DPA;
wire DPB;
wire IR_LD;
wire [2:0] IROUT;
wire [1:0] MSA;
wire [1:0] MSB;
wire [2:0] MSC;
wire [3:0] MUXA;
wire [3:0] MUXB;
wire [3:0] OUTPUT;
wire [3:0] PC;
wire PC_INC;
wire PC_LD;
wire [1:0] Q;
wire [3:0] REGA;
wire [3:0] REGB;
wire [7:0] X;

// assign statements (if any)                          
LAB6_Part2 i1 (
// port map - connection between master ports and signals/registers   
	.AA(AA),
	.Address(Address),
	.BB(BB),
	.CC(CC),
	.CIN(CIN),
	.CLK(CLK),
	.COUT(COUT),
	.D(D),
	.DPA(DPA),
	.DPB(DPB),
	.IR_LD(IR_LD),
	.IROUT(IROUT),
	.Mem_CLK(Mem_CLK),
	.MSA(MSA),
	.MSB(MSB),
	.MSC(MSC),
	.MUXA(MUXA),
	.MUXB(MUXB),
	.\OUTPUT (OUTPUT),
	.PC(PC),
	.PC_INC(PC_INC),
	.PC_LD(PC_LD),
	.Q(Q),
	.REGA(REGA),
	.REGB(REGB),
	.Reset_L(Reset_L),
	.X(X)
);
initial 
begin 
#4000000 $finish;
end 

// Reset_L
initial
begin
	Reset_L = 1'b0;
	Reset_L = #50000 1'b1;
end 

// Mem_CLK
always
begin
	Mem_CLK = 1'b0;
	Mem_CLK = #25000 1'b1;
	#25000;
end 

// CIN
initial
begin
	CIN = 1'b0;
end 
endmodule

